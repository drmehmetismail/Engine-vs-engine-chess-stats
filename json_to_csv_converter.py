"""This script inputs the JSON file generated by lichess_evals_extractor.py and outputs a CSV file
containing the following columns:
- White, Black, WhiteElo, BlackElo, WhiteResult, BlackResult, gi, gpl, acpl, white_move_number, black_move_number
"""

import json
import os
import pandas as pd
from pandas import json_normalize
import sys


def main(json_file_path, csv_output_file):
    data_list = []

    try:
        with open(json_file_path, 'r') as f:
            all_data = json.load(f)
            
            if not all_data:  # Add a check for empty data
                print(f"No data found in {json_file_path}")
                return
            # Iterate through each key in the JSON file
            for key, data in all_data.items():
                white_player = data.get('White', '')
                black_player = data.get('Black', '')

                data['White'] = white_player
                data['Black'] = black_player

                flattened_data = json_normalize(data)
                data_list.append(flattened_data)

    except Exception as e:
        print(f'Error processing {json_file_path}: {e}')

    data_frame = pd.concat(data_list, ignore_index=True)

    # Ensure the output directory exists
    if not os.path.exists(csv_output_dir):
        os.makedirs(csv_output_dir)

    # Define the output CSV file path within the output directory
    csv_output_file = os.path.join(csv_output_dir, 'engine_aggregated_game_data.csv')
    data_frame.to_csv(csv_output_file, index=False)
    print(f"Data saved to {csv_output_file}")

if __name__ == "__main__":
    if len(sys.argv) < 3:
        print("Usage: python json_to_csv_converter.py <json_file_path> <csv_output_dir>")
        sys.exit(1)

    json_file_path = sys.argv[1]
    csv_output_dir = sys.argv[2]
    main(json_file_path, csv_output_dir)